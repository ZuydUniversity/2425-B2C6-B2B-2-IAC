# This is a basic workflow to help you get started with Actions

name: Terraform Deploy

# Controls when the workflow will run
on:
  workflow_run:
    workflows: ["Config Checks"]  # Controleer eerst of Terraform (build) gelukt is
    types:
      - completed

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-24.04
    env:
      ARM_CLIENT_ID: "${{ secrets.AZURE_SPN_CLIENT_ID }}"
      ARM_CLIENT_SECRET: "${{ secrets.AZURE_SPN_CLIENT_SECRET }}"
      ARM_TENANT_ID: "${{ secrets.AZURE_SPN_TENANT_ID }}"
      ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
      ARM_ACCESS_KEY: "${{ secrets.AZURE_STORAGE_ACCESS_KEY }}"
      TF_VAR_image_registry_username: "${{ secrets.IMAGE_REGISTRY_USERNAME }}"
      TF_VAR_image_registry_password: "${{ secrets.IMAGE_REGISTRY_PASSWORD }}"
      TF_VAR_ssl_cert_password: "${{ secrets.APPGW_SSL_CERT_PASSWORD }}"
      TF_VAR_ssl_cert: "${{ secrets.APPGW_SSL_CERT }}"

      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.0

      # - name: Log in to Azure CLI
      #   uses: azure/login@v2
      #   with:
      #     creds: ${{ secrets.AZURE_CREDENTIALS }}
      #   continue-on-error: true

      # - name: Get latest frontend image tag from ACR
      #   id: get_tag
      #   run: |
      #     ACR_NAME="containerRegistryB2B"
      #     REPO_NAME="b2b-frontend"
      #     TAG=$(az acr repository show-tags \
      #       --name $ACR_NAME \
      #       --repository $REPO_NAME \
      #       --orderby time_desc \
      #       --output tsv \
      #       --top 1)
      #     echo "Latest tag is $TAG"
      #     echo "::set-output name=tag::$TAG"
      #   continue-on-error: true

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="resource_group_name=2425-B2C6-B2B-2" \
            -backend-config="storage_account_name=b2b2tfstatestorage" \
            -backend-config="container_name=tfstate" \
            -backend-config="key=terraform.tfstate"

      # - name: Terraform plan
      #   run: terraform plan -out=tfplan -var="frontend_image_tag=${{ steps.get_tag.outputs.tag }}"
      #   continue-on-error: false

      - name: Terraform plan
        run: terraform plan -out=tfplan
        continue-on-error: false

      - name: Terraform apply
        run: terraform apply -auto-approve tfplan