# This is a basic workflow to help you get started with Actions

name: Terraform

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-24.04
    env:
      TF_VAR_image_registry_username: "${{ secrets.IMAGE_REGISTRY_USERNAME }}"
      TF_VAR_image_registry_password: "${{ secrets.IMAGE_REGISTRY_PASSWORD }}"
      TF_VAR_azure_spn_client_id: "${{ secrets.AZURE_SPN_CLIENT_ID }}"
      TF_VAR_azure_spn_client_secret: "${{ secrets.AZURE_SPN_CLIENT_SECRET }}"
      TF_VAR_azure_spn_tenant_id: "${{ secrets.AZURE_SPN_TENANT_ID }}"
      TF_VAR_azure_spn_subscription_id: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          # The version of Terraform CLI to install. Instead of full version string you can also specify constraint string starting with "<" (for example `<1.13.0`) to install the latest version satisfying the constraint. A value of `latest` will install the latest version of Terraform CLI. Defaults to `latest`.
          terraform_version: 1.12.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
