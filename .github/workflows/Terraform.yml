# This is a basic workflow to help you get started with Actions

name: Terraform

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-24.04
    env:
      ARM_CLIENT_ID: "${{ secrets.AZURE_SPN_CLIENT_ID }}"
      ARM_CLIENT_SECRET: "${{ secrets.AZURE_SPN_CLIENT_SECRET }}"
      ARM_TENANT_ID: "${{ secrets.AZURE_SPN_TENANT_ID }}"
      ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
      TF_VAR_image_registry_username: "${{ secrets.IMAGE_REGISTRY_USERNAME }}"
      TF_VAR_image_registry_password: "${{ secrets.IMAGE_REGISTRY_PASSWORD }}"
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.0
      
      - name: Debug Azure Env Vars
        run: |
          echo "ARM_CLIENT_ID=$ARM_CLIENT_ID"
          echo "ARM_TENANT_ID=$ARM_TENANT_ID"
          echo "ARM_SUBSCRIPTION_ID=$ARM_SUBSCRIPTION_ID"

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Format Check
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        continue-on-error: false

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Cleanup
        run: rm tfplan 
